{"version":3,"sources":["quiz/Questions.js","quiz/Quiz.js","quiz/categories.js","quiz/Home.js","quiz/Result.js","App.js","index.js"],"names":["Questions","quesIndex","setQuesIndex","question","score","setScore","option","correct","useState","selected","setSelected","error","setError","navigate","useNavigate","handelSelect","cur","className","length","style","color","map","disabled","onClick","handelSubmit","Quiz","setQuestion","name","setOptions","useEffect","handleShuffle","correct_answer","incorrect_answers","qAnswer","sort","Math","random","category","Categories","value","Home","setName","fetchQuestion","setCategory","level","setLevel","type","placeholder","onChange","e","target","src","alt","Result","App","a","axios","get","data","results","backgroundImage","backgroundSize","backgroundPosition","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.26b20237.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Questions.css';\r\n\r\nfunction Questions(\r\n    {\r\n        quesIndex,\r\n        setQuesIndex,\r\n        question,\r\n        score,\r\n        setScore,\r\n        option,\r\n        correct\r\n    }\r\n) {\r\n    const [selected, setSelected] = useState();\r\n    const [error, setError] = useState(false);\r\n    const navigate = useNavigate();\r\n    function handelSubmit(cur) {\r\n        setSelected(cur);\r\n        if (cur === correct) {\r\n            setScore(score + 1);\r\n        }\r\n    }\r\n\r\n    function handelSelect(cur) {\r\n        if (selected === cur && selected === correct) return \"correct\";\r\n        else if (selected === cur && selected !== correct) return \"wrong\";\r\n        else if (cur === correct) return \"correct\";\r\n    }\r\n\r\n    function handelNext() {\r\n        if (quesIndex > 8) {\r\n            navigate(\"/result\");\r\n        } else if (selected) {\r\n            setQuesIndex(quesIndex + 1);\r\n            setSelected();\r\n            setError(true)\r\n        } else {\r\n            setError(\"Please select a option first\");\r\n        }\r\n    }\r\n\r\n    function quiteGame() {\r\n        setQuesIndex(0);\r\n        setScore(0);\r\n        setSelected()\r\n        setError(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <h2>Question no {quesIndex + 1} / {question.length}</h2>\r\n            <h2>{question[quesIndex].question}</h2>\r\n            {error && <h2 style={{ color: \"red\" }}>{error}</h2>}\r\n            <div className=\"myQuestion\">\r\n                {option && option.map((cur) => {\r\n                    return (\r\n                        <button\r\n                            className={selected && handelSelect(cur)}\r\n                            disabled={selected}\r\n                            key={cur}\r\n                            onClick={() => handelSubmit(cur)}\r\n                        >\r\n                            {cur}\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"quit\">\r\n                <button className=\"bt\" onClick={quiteGame}>Quit</button>\r\n                <button className=\"bt\" onClick={handelNext}>Next</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Questions;","import { useState, useEffect } from \"react\";\r\nimport \"./Quiz.css\";\r\nimport Questions from \"./Questions\";\r\nfunction Quiz({ question, setQuestion, name, score, setScore }) {\r\n    const [quesIndex, setQuesIndex] = useState(0);\r\n    const [option, setOptions] = useState();\r\n    useEffect(() => {\r\n        setOptions(\r\n            question &&\r\n            handleShuffle([\r\n                question[quesIndex]?.correct_answer,\r\n                ...question[quesIndex]?.incorrect_answers,\r\n            ])\r\n        );\r\n    }, [quesIndex, question]);\r\n    const handleShuffle = (qAnswer) => {\r\n        return qAnswer.sort(() => Math.random() - 0.5);\r\n    };\r\n    return (\r\n        <div className=\"quiz\">\r\n            <h2 className=\"user_name\"> Welcome <span>{name}</span> best of luck üëç</h2>\r\n            {\r\n                question ? (\r\n                    <>\r\n                        <div className=\"uesr_details\">\r\n                            <span>Category - {question[quesIndex].category}</span>\r\n                            <span>Score {score} </span>\r\n                        </div>\r\n                        <Questions\r\n                            quesIndex={quesIndex}\r\n                            setQuesIndex={setQuesIndex}\r\n                            question={question}\r\n                            setQuestion={setQuestion}\r\n                            score={score}\r\n                            setScore={setScore}\r\n                            option={option}\r\n                            setOptions={setOptions}\r\n                            correct={question[quesIndex].correct_answer}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <h1 className=\"questionWait\">Please wait some moment ...</h1>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Quiz;","const Categories = [\r\n    {category: \"General Knowledge\",value: 9,},\r\n    { category: \"Books\", value: 10 },\r\n    { category: \"Films\", value: 11 },\r\n    { category: \"Music\", value: 12 },\r\n    { category: \"Musicals and Theaters\", value: 13 },\r\n    { category: \"Television\", value: 14 },\r\n    { category: \"Video Games\", value: 15 },\r\n    { category: \"Board Games\", value: 16 },\r\n    { category: \"Science and Nature\", value: 17 },\r\n    { category: \"Computer\", value: 18 },\r\n    { category: \"Mathematics\", value: 19 },\r\n    { category: \"Mythology\", value: 20 },\r\n    { category: \"Sports\", value: 21 },\r\n    { category: \"Geography\", value: 22 },\r\n    { category: \"History\", value: 23 },\r\n    { category: \"Politics\", value: 24 },\r\n    // { category: \"Art\", value: 25 },\r\n    { category: \"Celebrities\", value: 26 },\r\n    { category: \"Animals\", value: 27 },\r\n    { category: \"Vehicles\", value: 28 },\r\n    { category: \"Comics\", value: 29 },\r\n    { category: \"Gadgets\", value: 30 },\r\n    { category: \"Japanese Anime\", value: 31 },\r\n    { category: \"Cartoon and Animations\", value: 32 },\r\n  ];\r\n  \r\n  export default Categories;","import './Home.css';\r\nimport Categories from './categories';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction Home({ name, setName, fetchQuestion }) {\r\n    const [category, setCategory] = useState(\"\");\r\n    const [level, setLevel] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    function handelSubmit() {\r\n        if (!name || !category || !level) {\r\n            setError(true);\r\n            return;\r\n        } else {\r\n            setError(false);\r\n            fetchQuestion(category, level);\r\n            navigate(\"/quiz\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Welcome To Quiz</h2>\r\n            <div className=\"home_main\">\r\n                <div className=\"left_side\">\r\n                    <div className=\"quiz_setting\">\r\n                        {error && <p className=\"error_msg\">Please select all the field</p>}\r\n                        <input type=\"text\" placeholder=\"Your name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                        <select onChange={(e) => setCategory(e.target.value)}>\r\n                            {\r\n                                Categories.map((cur) => {\r\n                                    return (\r\n                                        <option key={cur.category} value={cur.value}>{cur.category}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <select onChange={(e) => setLevel(e.target.value)}>\r\n                            <option>Easy</option>\r\n                            <option>Medium</option>\r\n                            <option>Hard</option>\r\n                        </select>\r\n                        <button className=\"btn\" onClick={handelSubmit}>Start quiz</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right_side\">\r\n                   <img src='/quiz.png' alt=\"homeImage\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import { useNavigate } from \"react-router-dom\";\r\nimport \"./Result.css\";\r\nfunction Result({ name, setName, score, setScore, question }) {\r\n    const navigate = useNavigate();\r\n    function goToHome() {\r\n        setName(\"\")\r\n        setScore(0);\r\n        navigate(\"/\");\r\n    }\r\n    return (\r\n        <div className=\"result\">\r\n            <h2>Congratulations <span>{name}</span></h2>\r\n            <h2>Your total score is <span>{score} out of {question.length}</span></h2>\r\n            <button className=\"bt\" onClick={goToHome}>Go back to home</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Result;","import './App.css';\nimport Quiz from './quiz/Quiz';\nimport Home from './quiz/Home';\nimport Result from './quiz/Result';\nimport {Routes, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [question, setQuestion] = useState();\n  const [name, setName] = useState(\"\");\n  const [score, setScore] = useState(0);\n  async function fetchQuestion(category = \"\", level = \"\") {\n    const { data } = await axios.get(`https://opentdb.com/api.php?amount=10${category && `&category=${category}`\n      }${level && `&level=${level}`}&type=multiple`);\n    setQuestion(data.results);\n  }\n  return (\n    <div className=\"app\" style={{backgroundImage:`URL(\"../bgtwo.jpg\")`,backgroundSize:\"cover\",backgroundPosition:\"center\"}}>\n        <Routes>\n          <Route path=\"/\" element={<Home name={name} setName={setName} fetchQuestion={fetchQuestion} />}></Route>\n          <Route path=\"/quiz\" element={<Quiz question={question} setQuestion={setQuestion} name={name} score={score} setScore={setScore} />}></Route>\n          <Route path=\"/result\" element={<Result name={name} setName={setName} score={score} setScore={setScore} question={question} />}></Route>\n        </Routes>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n</React.StrictMode>\n)\n"],"sourceRoot":""}